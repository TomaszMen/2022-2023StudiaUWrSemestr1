#include <iostream>
#include <stdlib.h>
#include <cstdlib>
//#include <windows.h>
#include <time.h>
using namespace std;

void Enter() {
	for (int i = 0; i < 82; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	for (int i = 0; i < 4; i++) {
		cout << "\x1b[12m \x1b[47m";
		for (int i = 0; i < 80; i++) {
			cout << "\x1b[12m \x1b[100m";
		}
		cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
	}
	//==============================1liniaKółko
	cout << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 12; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 11; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m";
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================2liniaKółko
	cout << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 12; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 11; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m";
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================3liniaKółko
	cout << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 12; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m";
	for (int i = 0; i < 11; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m";
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================4liniaKółko
	cout << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 12; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 11; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m";
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================5liniaKółko
	cout << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 12; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[100m" << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 11; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m";
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================pomiedzyKółkiemAEnterem
	cout << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 80; i++) {
		cout << "\x1b[12m \x1b[100m";
	}
	cout << "\x1b[12m \x1b[47m";
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================1liniaENTER
	for (int i = 0; i < 82; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================2liniaENTER
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================3liniaENTER
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m";
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================4liniaENTER
	for (int i = 0; i < 31 - 8; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m\x1b[49m";
	cout << "\x1b[12mK\x1b[37m" << "\x1b[12mL\x1b[37m" << "\x1b[12mI\x1b[37m" << "\x1b[12mK\x1b[37m" << "\x1b[12mN\x1b[37m" << "\x1b[12mI\x1b[37m" << "\x1b[12mJ\x1b[37m" << "\x1b[12m:\x1b[37m";
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m";
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================5liniaENTER
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m";
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	//==============================6liniaENTER
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[41m";
	for (int i = 0; i < 31; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	//===============================7liniaENTER
	for (int i = 0; i < 82; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	//===============================Koniec
	for (int i = 0; i < 9; i++) {
		cout << "\x1b[12m \x1b[47m";
		for (int i = 0; i < 80; i++) {
			cout << "\x1b[12m \x1b[100m";
		}
		cout << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
	}
	for (int i = 0; i < 82; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	cin.ignore();
	system("CLS");
}
void Poziom() {
	for (int i = 0; i < 82; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	for (int i = 0; i < 3; i++) {
		cout << "\x1b[12m \x1b[47m";
		for (int j = 0; j < 80; j++) {
			cout << "\x1b[12m \x1b[100m";
		}
		cout << "\x1b[12m \x1b[47m";
		cout << "\x1b[12m \x1b[49m" << endl;
	}
	//=======================================
	for (int m = 0; m < 3; m++) {
		//===================================
		for (int k = 0; k < 2; k++) {
			cout << "\x1b[12m \x1b[47m";
			for (int i = 0; i < 30; i++) {
				cout << "\x1b[12m \x1b[100m";
			}
			for (int i = 0; i < 21; i++) {
				cout << "\x1b[12m \x1b[40m";
			}
			for (int i = 0; i < 29; i++) {
				cout << "\x1b[12m \x1b[100m";
			}
			cout << "\x1b[12m \x1b[47m";
			cout << "\x1b[12m \x1b[49m" << endl;
		}
		//===================================
		for (int k = 0; k < 3; k++) {
			cout << "\x1b[12m \x1b[47m";
			for (int i = 0; i < 30; i++) {
				cout << "\x1b[12m \x1b[100m";
			}
			for (int i = 0; i < 3; i++) {
				cout << "\x1b[12m \x1b[40m";
			}
			for (int i = 0; i < 3; i++) {
				cout << "\x1b[12m \x1b[47m";
			}
			for (int i = 0; i < 3; i++) {
				cout << "\x1b[12m \x1b[40m";
			}
			for (int i = 0; i < 3; i++) {
				cout << "\x1b[12m \x1b[47m";
			}
			for (int i = 0; i < 3; i++) {
				cout << "\x1b[12m \x1b[40m";
			}
			for (int i = 0; i < 3; i++) {
				cout << "\x1b[12m \x1b[47m";
			}
			for (int i = 0; i < 3; i++) {
				cout << "\x1b[12m \x1b[40m";
			}
			for (int i = 0; i < 29; i++) {
				cout << "\x1b[12m \x1b[100m";
			}
			cout << "\x1b[12m \x1b[47m";
			cout << "\x1b[12m \x1b[49m" << endl;
		}
		//===================================
	}
	//========================================
	for (int k = 0; k < 2; k++) {
		cout << "\x1b[12m \x1b[47m";
		for (int i = 0; i < 30; i++) {
			cout << "\x1b[12m \x1b[100m";
		}
		for (int i = 0; i < 21; i++) {
			cout << "\x1b[12m \x1b[40m";
		}
		for (int i = 0; i < 29; i++) {
			cout << "\x1b[12m \x1b[100m";
		}
		cout << "\x1b[12m \x1b[47m";
		cout << "\x1b[12m \x1b[49m" << endl;
	}
	//========================================
	for (int i = 0; i < 3; i++) {
		cout << "\x1b[12m \x1b[47m";
		for (int j = 0; j < 80; j++) {
			cout << "\x1b[12m \x1b[100m";
		}
		cout << "\x1b[12m \x1b[47m";
		cout << "\x1b[12m \x1b[49m" << endl;
	}
	for (int i = 0; i < 82; i++) {
		cout << "\x1b[12m \x1b[47m";
	}
	cout << "\x1b[12m \x1b[49m" << endl;
	cout << "\033[2;36H" << "1";
	cout << "\033[2;42H" << "2";
	cout << "\033[2;48H" << "3";
	cout << "\033[8;30H" << "1";
	cout << "\033[14;30H" << "2";
	cout << "\033[20;30H" << "3";
}
int Krzyzyk(int x, int y,int t[]) {
	if (x == 1) {
		if (y == 1) {
			cout << "\033[7;35H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[8;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[9;35H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[0] = 1;
		}
		if (y == 2) {
			cout << "\033[12;35H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[13;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[14;35H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[1] = 1;
		}
		if (y == 3) {
			cout << "\033[17;35H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[18;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[19;35H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[2] = 1;
		}
	}
	if (x == 2) {
		if (y == 1) {
			cout << "\033[7;41H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[8;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[9;41H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[3] = 1;
		}
		if (y == 2) {
			cout << "\033[12;41H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[13;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[14;41H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[4] = 1;
		}
		if (y == 3) {
			cout << "\033[17;41H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[18;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[19;41H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[5] = 1;
		}
	}
	if (x == 3) {
		if (y == 1) {
			cout << "\033[7;47H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[8;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[9;47H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[6] = 1;
		}
		if (y == 2) {
			cout << "\033[12;47H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[13;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[14;47H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[7] = 1;
		}
		if (y == 3) {
			cout << "\033[17;47H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[18;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[19;47H" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[101m" << "\x1b[12m \x1b[49m" << endl;
			t[8] = 1;
		}
	}
	return t[];
}
int Kolko(int xb, int yb, int t[],bool dane) {
	dane = false;
	Sleep(1000);
	srand(time(NULL));
	do {
		xb = rand() % 3 + 1;
		yb = rand() % 3 + 1;
		switch (xb) {
			case 1:
				switch (yb) {
					case 1:
						if (t[0] == 1 || t[0] == 2) {
							dane = false;
						}
						else if (t[0] == 0) {
							dane = true;
						}
						break;
					case 2:
						if (t[1] == 1 || t[1] == 2) {
							dane = false;
						}
						else if (t[1] == 0) {
							dane = true;
						}
						break;
					case 3:
						if (t[2] == 1 || t[2] == 2) {
							dane = false;
						}
						else if (t[2] == 0) {
							dane = true;
						}
						break;
				}
				break;
			case 2:
				switch (yb) {
					case 1:
						if (t[3] == 1 || t[3] == 2) {
							dane = false;
						}
						else if (t[3] == 0) {
							dane = true;
						}
						break;
					case 2:
						if (t[4] == 1 || t[4] == 2) {
							dane = false;
						}
						else if (t[4] == 0) {
							dane = true;
						}
						break;
					case 3:
						if (t[5] == 1 || t[5] == 2) {
							dane = false;
						}
						else if (t[5] == 0) {
							dane = true;
						}
						break;
				}
				break;
			case 3:
				switch (yb) {
				case 1:
					if (t[6] == 1 || t[6] == 2) {
						dane = false;
					}
					else if (t[6] == 0) {
						dane = true;
					}
					break;
				case 2:
					if (t[7] == 1 || t[7] == 2) {
						dane = false;
					}
					else if (t[7] == 0) {
						dane = true;
					}
					break;
				case 3:
					if (t[8] == 1 || t[8] == 2) {
						dane = false;
					}
					else if (t[8] == 0) {
						dane = true;
					}
					break;
				}
				break;
		}
	} while (dane == false);
	if (xb == 1) {
		if (yb == 1) {
			cout << "\033[7;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[8;35H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[9;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[0] = 2;
		}
		if (yb == 2) {
			cout << "\033[12;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[13;35H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[14;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[1] = 2;
		}
		if (yb == 3) {
			cout << "\033[17;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[18;35H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[19;35H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[2] = 2;
		}
	}
	if (xb == 2) {
		if (yb == 1) {
			cout << "\033[7;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[8;41H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[9;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[3] = 2;
		}
		if (yb == 2) {
			cout << "\033[12;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[13;41H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[14;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[4] = 2;
		}
		if (yb == 3) {
			cout << "\033[17;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[18;41H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[19;41H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[5] = 2;
		}
	}
	if (xb == 3) {
		if (yb == 1) {
			cout << "\033[7;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[8;47H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[9;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[6] = 2;
		}
		if (yb == 2) {
			cout << "\033[12;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[13;47H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[14;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[7] = 2;
		}
		if (yb == 3) {
			cout << "\033[17;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[18;47H" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[49m" << endl;
			cout << "\033[19;47H" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[104m" << "\x1b[12m \x1b[47m" << "\x1b[12m \x1b[49m" << endl;
			t[9] = 2;
		}
	}
	return t[];
}
int check(int t[], bool koniec) {
	if (t[0] == 1 && t[1] == 1 && t[2] == 1) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Krzyzyk";
	}
	else if (t[3] == 1 && t[4] == 1 && t[5] == 1) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Krzyzyk";
	}
	else if (t[6] == 1 && t[7] == 1 && t[8] == 1) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Krzyzyk";
	}
	else if (t[0] == 1 && t[3] == 1 && t[6] == 1) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Krzyzyk";
	}
	else if (t[1] == 1 && t[4] == 1 && t[7] == 1) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Krzyzyk";
	}
	else if (t[2] == 1 && t[5] == 1 && t[8] == 1) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Krzyzyk";
	}
	else if (t[0] == 1 && t[4] == 1 && t[8] == 1) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Krzyzyk";
	}
	else if (t[2] == 1 && t[4] == 1 && t[6] == 1) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Krzyzyk";
	}
	//==========================================Kółko
	else if (t[0] == 2 && t[1] == 2 && t[2] == 2) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Kolko";
	}
	else if (t[3] == 2 && t[4] == 2 && t[5] == 2) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Kolko";
	}
	else if (t[6] == 2 && t[7] == 2 && t[8] == 2) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Kolko";
	}
	else if (t[0] == 2 && t[3] == 2 && t[7] == 2) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Kolko";
	}
	else if (t[2] == 2 && t[4] == 2 && t[7] == 2) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Kolko";
	}
	else if (t[2] == 2 && t[5]== 2 && t[8] == 2) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Kolko";
	}
	else if (t[0] == 2 && t[4] == 2 && t[8] == 2) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Kolko";
	}
	else if (t[2] == 2 && t[4] == 2 && t[6] == 2) {
		koniec = true;
		cout << "\033[4;47H" << "Wygral Kolko";
	}

	return koniec;
}
int main() {
	int t[9];
	int xb=0,yb=0,x=0,y=0;
	bool koniec = false;
	bool dane = false;
	Enter();
	Poziom();
	do {
		do {
			int m = 0;
			do {
				if (m > 0) {
					cout << "\033[25;38H" << "\x1b[12mERROR\x1b[31m" << "\x1b[12m\x1b[39m";
					cin.ignore();
				}
				cin.clear();
				m++;
				cout << "\033[24;36H" << "Wpisz kolumne:" << endl;
				cin >> x;
			} while (x < 1 || x>3);
			m = 0;
			do {
				if (m > 0) {
					cout << "\033[25;38H" << "\x1b[12mERROR\x1b[31m" << "\x1b[12m\x1b[39m";
					cin.ignore();
				}
				cin.clear();
				m++;
				cout << "\033[25;38H" << "Wpisz rzad:" << endl;
				cin >> y;
			} while (y < 1 || y>3);
			switch (x) {
			case 1:
				switch (y) {
				case 1:
					if (t[0] == 1 || t[0] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[0] == 0) {
						dane = true;
					}
					break;
				case 2:
					if (t[1] == 1 || t[1] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[1] == 0) {
						dane = true;
					}
					break;
				case 3:
					if (t[2] == 1 || t[2] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[2] == 0) {
						dane = true;
					}
					break;
				}
				break;
			case 2:
				switch (y) {
				case 1:
					if (t[3] == 1 || t[3] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[3] == 0) {
						dane = true;
					}
					break;
				case 2:
					if (t[4] == 1 || t[4] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[4] == 0) {
						dane = true;
					}
					break;
				case 3:
					if (t[5] == 1 || t[5] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[5] == 0) {
						dane = true;
					}
					break;
				}
				break;
			case 3:
				switch (y) {
				case 1:
					if (t[6] == 1 || t[6] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[6] == 0) {
						dane = true;
					}
					break;
				case 2:
					if (t[7] == 1 || t[7] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[7] == 0) {
						dane = true;
					}
					break;
				case 3:
					if (t[8] == 1 || t[8] == 2) {
						cout << "\033[5;2H" << "Dana komórka jest zajęta, wybierz inną.";
						dane = false;
					}
					else if (t[8] == 0) {
						dane = true;
					}
					break;
				}
				break;
			}
		} while (dane == false);
		Krzyzyk(x,y,t[]);
		Kolko(xb, yb, t[], dane);
		check(t[], koniec);
		if (koniec == true) {
			break;
		}
		cout <<"\033[1;2H"<< t[0] << "\t" << t[1] << "\t" << t[2] << endl;
		cout <<"\033[2;2H"<< t[3] << "\t" << t[4] << "\t" << t[5] << endl;
		cout <<"\033[3;2H"<< t[6] << "\t" << t[7] << "\t" << t[8] << endl;
		cout << koniec << "\t" << dane;
	} while (koniec == false);
	return 0;
}
